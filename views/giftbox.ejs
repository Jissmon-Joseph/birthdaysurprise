<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>21 Beautiful Surprises 💕</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
        }

        .stars {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .star {
            position: absolute;
            width: 2px;
            height: 2px;
            background: white;
            border-radius: 50%;
            animation: twinkle 3s infinite;
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0.3; }
            50% { opacity: 1; }
        }

        .container {
            position: relative;
            z-index: 2;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            color: white;
        }

        .header h1 {
            font-size: 3.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            background: linear-gradient(45deg, #ffd89b, #19547b);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
        }

        .boxes-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .surprise-box {
            position: relative;
            width: 100%;
            height: 180px;
            background: linear-gradient(145deg, #ffffff, #f0f0f0);
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.4s ease;
            box-shadow: 
                20px 20px 60px #bebebe,
                -20px -20px 60px #ffffff;
            overflow: hidden;
            text-decoration: none;
            color: inherit;
            display: block;
        }

        .surprise-box:hover {
            transform: translateY(-10px) scale(1.05);
            box-shadow: 
                25px 25px 80px #bebebe,
                -25px -25px 80px #ffffff;
        }

        .surprise-box.visited {
            background: linear-gradient(145deg, #e8f5e8, #d4f1d4);
        }

        .surprise-box.visited .box-content .box-icon {
            opacity: 1;
        }

        .surprise-box.visited .box-content .box-text {
            color: #4a7c59;
            font-weight: 600;
        }

        .box-number {
            position: absolute;
            top: 15px;
            left: 15px;
            width: 40px;
            height: 40px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.1rem;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .box-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
            width: 80%;
        }

        .box-icon {
            font-size: 2.5rem;
            margin-bottom: 10px;
            opacity: 0.7;
            transition: all 0.3s ease;
        }

        .box-text {
            font-size: 0.9rem;
            color: #666;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .floating-hearts {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 999;
        }

        .heart {
            position: absolute;
            color: #ff69b4;
            font-size: 20px;
            animation: float 4s linear infinite;
            opacity: 0;
        }

        @keyframes float {
            0% {
                transform: translateY(100vh) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(-100px) rotate(360deg);
                opacity: 0;
            }
        }

        .loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .success-indicator {
            position: absolute;
            top: 5px;
            right: 5px;
            color: #4CAF50;
            font-size: 1.2rem;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .success-indicator.show {
            opacity: 1;
        }

        @media (max-width: 768px) {
            .header h1 {
                font-size: 2.5rem;
            }
            
            .boxes-grid {
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                gap: 15px;
            }
            
            .surprise-box {
                height: 150px;
            }
        }
    </style>
</head>
<body>
    <div class="stars"></div>
    <div class="floating-hearts"></div>
    
    <div class="container">
        <div class="header">
            <h1>✨ 21 Beautiful Surprises ✨</h1>
            <p>Each box holds a special message just for you... Click to discover the magic! 💕</p>
        </div>

        <div class="boxes-grid" id="boxesGrid">
            <!-- Boxes will be generated by JavaScript -->
        </div>

        <!-- <div>
            <button onclick="clearloacalStorage()">Clear storage</button>
        </div> -->
    </div>
    
    <!-- SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> 
    <script>

        // function clearloacalStorage() {
        //     // localStorage.clear();
        //     localStorage.removeItem('visitedSurprises');
        //     window.location.reload();
        // }

        // Configuration - These are your EJS routes
        const pageUrls = [
            '/surprise/1',   // Box 1
            '/surprise/2',   // Box 2
            '/surprise/3',   // Box 3
            '/surprise/4',   // Box 4
            '/surprise/5',   // Box 5
            '/surprise/6',   // Box 6
            '/surprise/7',   // Box 7
            '/surprise/8',   // Box 8
            '/surprise/9',   // Box 9
            '/surprise/10',  // Box 10
            '/surprise/11',  // Box 11
            '/surprise/12',  // Box 12
            '/surprise/13',  // Box 13
            '/surprise/14',  // Box 14
            '/surprise/15',  // Box 15
            '/surprise/16',  // Box 16
            '/surprise/17',  // Box 17
            '/surprise/18',  // Box 18
            '/surprise/19',  // Box 19
            '/surprise/20',  // Box 20
            '/surprise/21'   // Box 21
        ];

        // Backend API endpoint
        const BACKEND_URL = '/box-opened';

        // Function to handle box click
        async function handleBoxClick(boxNumber) {
            const box = document.querySelector(`[data-box="${boxNumber}"]`);
            if (!box) return;
            
            const successIndicator = box.querySelector('.success-indicator');
            
            try {
                // Add loading state
                box.classList.add('loading');
                
                // Prepare data for backend
                const data = {
                    boxNumber: boxNumber,
                    openDate: new Date().toISOString(),
                    isOpen: true,
                    timestamp: Date.now()
                };

                console.log('Sending to backend:', data);

                // Send to backend
                const response = await fetch(BACKEND_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();
                console.log('Backend response:', result);

                if (response.ok && result.status) {
                    // Success - show visual feedback
                    successIndicator.classList.add('show');
                    setTimeout(() => successIndicator.classList.remove('show'), 2000);

                    createFloatingHearts();

                    // Mark as visited
                    setTimeout(() => {
                        box.classList.add('visited');
                        const icon = box.querySelector('.box-icon');
                        const text = box.querySelector('.box-text');
                        if (icon) icon.textContent = '✨';
                        if (text) text.textContent = 'Opened!';
                        saveVisitedBox(boxNumber);
                    }, 100);

                    box.classList.remove('loading');

                    // Show success message
                   Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'success',
          title:result.message,
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
        });
                    // Redirect to surprise page
                    setTimeout(() => {
                        window.location.href = pageUrls[boxNumber - 1];
                    }, 1000);

                } else {
                    // Backend returned error
                    box.classList.remove('loading');
                         Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title:result.message ,
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
        });
                }

            } catch (error) {
                console.error('Network error:', error);
                box.classList.remove('loading');
                
                Swal.fire({
                    position: "top-end",
                    icon: "warning",
                    title: 'Connection issue, but you can still continue!',
                    showConfirmButton: false,
                    timer: 3000
                });

                // Still allow to continue even if backend fails
                createFloatingHearts();
                box.classList.add('visited');
                const icon = box.querySelector('.box-icon');
                const text = box.querySelector('.box-text');
                if (icon) icon.textContent = '✨';
                if (text) text.textContent = 'Opened!';
                saveVisitedBox(boxNumber);

                setTimeout(() => {
                    window.location.href = pageUrls[boxNumber - 1];
                }, 1000);
            }
        }

        // Generate stars
        function createStars() {
            const starsContainer = document.querySelector('.stars');
            if (!starsContainer) return;
            
            for (let i = 0; i < 100; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.animationDelay = Math.random() * 3 + 's';
                starsContainer.appendChild(star);
            }
        }

        // Create surprise boxes
        function createBoxes() {
            const grid = document.getElementById('boxesGrid');
            if (!grid) return;
            
            for (let i = 1; i <= 21; i++) {
                const box = document.createElement('div');
                box.className = 'surprise-box';
                box.setAttribute('data-box', i);
                
                // Add click handler
                box.onclick = function(event) {
                    event.preventDefault();
                    handleBoxClick(i);
                };
                
                const boxNumber = document.createElement('div');
                boxNumber.className = 'box-number';
                boxNumber.textContent = i;
                
                const boxContent = document.createElement('div');
                boxContent.className = 'box-content';
                
                const boxIcon = document.createElement('div');
                boxIcon.className = 'box-icon';
                boxIcon.textContent = '🎁';
                
                const boxText = document.createElement('div');
                boxText.className = 'box-text';
                boxText.textContent = 'Click to open surprise!';
                
                const successIndicator = document.createElement('div');
                successIndicator.className = 'success-indicator';
                successIndicator.textContent = '✓';
                
                boxContent.appendChild(boxIcon);
                boxContent.appendChild(boxText);
                box.appendChild(boxNumber);
                box.appendChild(boxContent);
                box.appendChild(successIndicator);
                
                grid.appendChild(box);
            }
        }

        // Create floating hearts animation
        function createFloatingHearts() {
            const heartsContainer = document.querySelector('.floating-hearts');
            if (!heartsContainer) return;
            
            for (let i = 0; i < 20; i++) {
                setTimeout(() => {
                    const heart = document.createElement('div');
                    heart.className = 'heart';
                    heart.textContent = '💕';
                    heart.style.left = Math.random() * 100 + '%';
                    heart.style.fontSize = (Math.random() * 10 + 15) + 'px';
                    
                    heartsContainer.appendChild(heart);
                    
                    setTimeout(() => {
                        if (heart.parentNode) {
                            heart.remove();
                        }
                    }, 4000);
                }, i * 100);
            }
        }

        // Check for visited boxes on page load
        function checkVisitedBoxes() {
            try {
                const visitedBoxes = JSON.parse(localStorage.getItem('visitedSurprises') || '[]');
                visitedBoxes.forEach(boxNumber => {
                    const box = document.querySelector(`[data-box="${boxNumber}"]`);
                    if (box) {
                        box.classList.add('visited');
                        const icon = box.querySelector('.box-icon');
                        const text = box.querySelector('.box-text');
                        if (icon) icon.textContent = '✨';
                        if (text) text.textContent = 'Opened!';
                    }
                });
            } catch (error) {
                console.error('Error loading visited boxes:', error);
            }
        }

        // Save visited box to localStorage
        function saveVisitedBox(boxNumber) {
            try {
                const visitedBoxes = JSON.parse(localStorage.getItem('visitedSurprises') || '[]');
                if (!visitedBoxes.includes(boxNumber)) {
                    visitedBoxes.push(boxNumber);
                    localStorage.setItem('visitedSurprises', JSON.stringify(visitedBoxes));
                }
            } catch (error) {
                console.error('Error saving to localStorage:', error);
            }
        }

        // Initialize when page loads
        document.addEventListener('DOMContentLoaded', function() {
            createStars();
            createBoxes();
            checkVisitedBoxes();
        });
    </script>
</body>
</html>